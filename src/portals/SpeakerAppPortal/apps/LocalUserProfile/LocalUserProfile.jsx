import { useCallback, useEffect } from "react";
import Layout, { Header, Content } from "@components/Layout";
import Padding from "@components/Padding";
import AppLinkButton from "@components/AppLinkButton";
import LocalUserProfileForm from "./views/LocalUserProfileForm/LocalUserProfileForm";

import useDirtyState from "@hooks/useDirtyState";

import toFormValues from "@utils/toFormValues";

import SpeakerAppLocalUserProfileService from "@portals/SpeakerAppPortal/services/SpeakerAppLocalUserProfileService";

import { REGISTRATION_ID as CALL_CENTRAL_STATION_REGISTRATION_ID } from "../CallCentralStation";

export const REGISTRATION_ID = "local-user-profile";

const LocalUserProfile = {
  id: REGISTRATION_ID,
  title: "User Profile",
  style: {
    width: 640,
    height: 480,
  },
  serviceClasses: [SpeakerAppLocalUserProfileService],
  view: function View({ appServices }) {
    const localProfileService = appServices[SpeakerAppLocalUserProfileService];

    const { state, setState, isDirty, save, cancel } = useDirtyState(
      toFormValues(localProfileService.getState())
    );

    // Sync non-dirty state to localProfileService
    useEffect(() => {
      if (!isDirty) {
        localProfileService.setState(state);
      }
    }, [isDirty, state, localProfileService]);

    const { avatarURL, name, description } = state;

    /**
     * Auto-generate avatar and save it as dirty state.
     *
     * @return {Promise<void}
     */
    const handleFetchAutoGeneratedAvatarURL = useCallback(async () => {
      const avatarURL = await localProfileService.fetchAutoGeneratedAvatarURL();

      setState({ avatarURL });
    }, [localProfileService, setState]);

    /**
     * Auto-generate name and save it as dirty state.
     *
     * @return {Promise<void}
     */
    const handleFetchAutoGeneratedName = useCallback(async () => {
      const name = await localProfileService.fetchAutoGeneratedName();

      setState({ name });
    }, [localProfileService, setState]);

    /**
     * Auto-generate description and save it as dirty state.
     *
     * @return {Promise<void}
     */
    const handleFetchAutoGeneratedDescription = useCallback(async () => {
      const description =
        await localProfileService.fetchAutoGeneratedDescription();

      setState({ description });
    }, [localProfileService, setState]);

    return (
      <Layout>
        <Header>
          <Padding>
            <AppLinkButton
              id={CALL_CENTRAL_STATION_REGISTRATION_ID}
              title="Network"
            />
          </Padding>
        </Header>
        <Content>
          <LocalUserProfileForm
            onGenerateAvatar={handleFetchAutoGeneratedAvatarURL}
            avatarURL={avatarURL}
            onGenerateName={handleFetchAutoGeneratedName}
            name={name}
            onGenerateDescription={handleFetchAutoGeneratedDescription}
            description={description}
            onCancel={cancel}
            onChange={setState}
            onSubmit={save}
            isDirty={isDirty}
          />
        </Content>
      </Layout>
    );
  },
};

export default LocalUserProfile;
